# npc.hss

defineConstant(60, npc:deactDist)

script, delayedTb, tb, begin
    showTextbox(tb)
    timerWaitForTextbox()
end

script, tbDistance, begin
    if(currentTextbox == -1 || tbSource == 0) then(
        tbSource := 0
        exitScript()
    )

    variable(dist)

    dist := getDistance(sliceCX(player), sliceCY(player), sliceCX(getNPCSlice(tbSource)), sliceCY(getNPCSlice(tbSource)))
    if(dist > npc:deactDist) then(
        showTextbox()
        advanceTextbox
        tbSource := 0
    )
end

script, timerWaitForTextbox, begin
    if(currentTextbox <> -1 || getSliceExtra(lookupSlice(sli:charmileBody, getNPCSprite(npc:charmile)), extra2) <> 0) then(
        setTimer(timer:cutscene, 0, 1, @timerWaitForTextbox)
    ) else(
        controlsSuspended := false
    )
end

plotscript, saveSpot, begin
    if(readTimer(timer:saveMsg) > 0) then(
        exitScript()
    )
    saveInSlot(1)
    $3="Game Saved..."
    showStringAt(3, 1, getScreenHeight()--11)
    setTimer(timer:saveMsg, 60, 1, @hideSaveText)
end

script, hideSaveText, begin
    hideString(3)
end

# Charvile
# =======================

plotscript, charvile, begin
    setTag(tag:charvileStart, on)
    gamePaused := true
    controlsSuspended := true

    toggleCutsceneBars(true)

    focusCamera(84, 68, 2)
    waitForCamera()

    setHeroPosition(me, 79, 78)
    putSliceSubpixel(player, heroPixelX(me)*1000, heroPixelY(me)*1000)

    showTextbox(17)
    waitForTextbox()

    variable(ref, sl, spr)
    ref := globalNPCReference(enemy:charvile, 0)
    sl := getNPCSlice(ref)
    spr := lookupSlice(sl:walkaboutSpriteComponent, sl)

    setSliceVisible(sl, true)
    dissolveSprite(spr, dissolve:melt, 120, 0, true)
    waitForDissolve(spr)
    wait(4)
    charvileUndulate()
    suspendObstruction()
    walkNPC(ref, down, 9)
    focusCamera(84, 78, 1)

    showTextbox(6)
    waitForTextbox()

    wait(10)

    variable(x, y)
    for(x, 0, mapWidth()--1) do(
        for(y, 0, mapHeight()--1) do(
            if(readZone(1, x, y)) then(
                writePassBlock(x, y, northwall+southwall+eastwall+westwall)
                writeMapBlock(x, y, 133, 3)
            )
        )
    )

    $1="Charvile"
    toggleBossBar(true, 1)
    clearString(1)
    currentBoss := enemy:charvile
    putSliceSubpixel(sl, npcPixelX(ref)*1000, npcPixelY(ref)*1000)

    toggleCutsceneBars(false)
    cameraFollowsHero(me)
    gamePaused := false
    controlsSuspended := false
    setEnemyActDelay(globalNPCReference(enemy:charvile), 30)
    setEnemyState(globalNPCReference(enemy:charvile), ai:idle)
    resumeObstruction()
    playSong(1)

    minionCount := 0
end

script, charvileUndulate, reverse=false, begin
    if(globalNPCReference(enemy:charvile) == false) then(exitScript())
    
    variable(tick)
    if(reverse) then(tick := 180) 
    else(tick := 0)
    dissolveSprite(getNPCSprite(globalNPCReference(enemy:charvile)), dissolve:melt, 240, tick, reverse)
    setTimer(timer:charvileUndulate, 60, 1, @charvileUndulate)
    setTimerArgs(timer:charvileUndulate, (reverse+1),mod,2)
end

script, charvileKilled, begin
    variable(c, i, vfx, sl)

    controlsSuspended := true
    stopSong()

    setTag(tag:charvileDefeated, on)
    toggleCutsceneBars(true)

    setHeroStat(me, stat:HP, getHeroStat(me, stat:HP, maximumStat))

    for(c, npcCopyCount(enemy:slime, pool:global)--1, 0, -1) do(
        destroyNPC(globalNPCReference(enemy:slime, c))
    )
    c := lastChild(projectileLayer) 
    while(c) do(
        i := c
        c := previousSibling(c)
        freeSlice(i)
    )

    wait(10)

    variable(x, y)
    for(x, 0, mapWidth()--1) do(
        for(y, 0, mapHeight()--1) do(
            if(readZone(1, x, y)) then(
                writePassBlock(x, y, 0)
                writeMapBlock(x, y, 0, 3)
            )
        )
    )

    toggleBossBar(false)

    showTextbox(20)
    waitForTextbox()

    sl := getNPCSlice(globalNPC(enemy:charvile))
    playSound(sfx:DeathEcho, false, true)
    for(i, 0, 7) do(
        vfx := loadAttackSprite(5)
        setParent(vfx, fxLayer)
        centerSlice(vfx)
        putSlice(vfx, sliceCX(sl), sliceCY(sl))
        createParticle(vfx, 50, 4000, i*(360/8), 20)
    )

    createPickup(0, @healthPickup, sliceCX(sl)+random(-20,20), sliceCY(sl)+random(-20,20))
    createPickup(0, @healthPickup, sliceCX(sl)+random(-20,20), sliceCY(sl)+random(-20,20))
    createPickup(0, @healthPickup, sliceCX(sl)+random(-20,20), sliceCY(sl)+random(-20,20))

    toggleCutsceneBars(false)
    playSong(0)

    setTimer(timer:cutscene, 30, 1, @delayedTb)
    setTimerArgs(timer:cutscene, 22)

    saveInSlot(1)
end

plotscript, charvilePalShift, begin
    if(palShift == pal:charvile) then(exitScript())

    palShift := pal:charvile

    palShiftTick(-10, -1, -2)
end

plotscript, resetPalShift, begin
    if(palShift == pal:default) then(exitScript())

    palShift := pal:default

    palShiftTick(0, 0, 0)
end

script, palShiftTick, r, g, b, begin
    # r g b are target values
    traceValue(r, g, b, rShift, gShift, bShift)

    if(r == rShift && g == gShift && b == bShift) then(
        exitScript()
    )

    if(rShift > r) then(
        rShift -= 1
        tweakPalette(-1, 0, 0, 1, 255)
    ) elseif(rShift < r) then(
        rShift += 1
        tweakPalette(1, 0, 0, 1, 255)
    )
    if(gShift > g) then(
        gShift -= 1
        tweakPalette(0, -1, 0, 1, 255)
    ) elseif(gShift < g) then(
        gShift += 1
        tweakPalette(0, 1, 0, 1, 255)
    )
    if(bShift > b) then(
        bShift -= 1
        tweakPalette(0, 0, -1, 1, 255)
    ) elseif(bShift < b) then(
        bShift += 1
        tweakPalette(0, 0, 1, 1, 255)
    )
    updatePalette()

    setTimer(timer:fade, 1, 2, @palShiftTick)
    setTimerArgs(timer:fade, r, g, b)
end

# Charmile
# ===========================

defineConstant(6, npc:charmile)

script, charmileInit, begin
    variable(sl, body, butt, i)

    sl := getNPCSprite(npc:charmile)
    butt := loadWalkaboutSprite(49)
    
    setSliceLookup(butt, sli:charmileButt)
    createAnimation(butt, player:animSpeed*8, player:animSpeed, true)
    body := createContainer()
    setParent(body, sl)
    putSlice(body, 16, 10)
    setSliceLookup(body, sli:charmileBody)
    setSliceExtra(body, extra0, 50)     # body x
    setSliceExtra(body, extra1, 0)      # body y

    setParent(butt, sl)

    putSlice(butt, getSliceExtra(body, extra0) + sliceWidth(sl), getSliceExtra(body, extra1))

    for(i, 0, 9) do(
        sl := createLine(getSliceExtra(body, extra0), getSliceExtra(body, extra1))
        switch(i) do(
            case(0, 9) setLineColor(sl, 0)
            case(7, 8) setLineColor(sl, 10)
            case(else) setLineColor(sl, 17)
        )
        setParent(sl, body)
        setSliceY(sl, i)
    )
end

script, charmileUpdate, begin
    variable(ref, sl, butt, body, i)

    ref := npcReference(6, 0)

    sl := getNPCSprite(npc:charmile)
    butt := lookupSlice(sli:charmileButt, sl)
    body := lookupSlice(sli:charmileBody, sl)

    if(getSliceExtra(body, extra2) > 0) then(
        if(getSliceExtra(body, extra2) > 120) then(
            charmileFrontMove(-1, -2)
        ) else(
            charmileWidth(-1)
            charmileHeight(-2)
        )
        
        setSliceExtra(body, extra2, getSliceExtra(body, extra2)--1)
    ) elseif(getSliceExtra(body, extra2) < 0) then(
        charmileWidth(2)
        setSliceExtra(body, extra2, getSliceExtra(body, extra2)+2)
    )

    # Match player y along bridge
    if(checkTag(tag:charmileMoved)) then(
        putNPC(npc:charmile, 37*20, (12*20)--6)
        if(checkTag(tag:charmileStretched)) then(
            if(getSliceExtra(body, extra2) >= 0) then(
                setSliceExtra(body, extra0, 450)
                for(i, 39, 59) do(
                    writePassBlock(i, 12, 0)
                )
            )
        ) else(
            setSliceExtra(body, extra0, 0)
        )
        if(sliceY(player)/20 == 12) then(
            putNPC(npc:charmile, npcPixelX(npc:charmile), sliceY(player)--10)
        )
    )

    putSlice(butt, getSliceExtra(body, extra0) + sliceWidth(sl), getSliceExtra(body, extra1))

    sl := firstChild(body)
    while(sl) do(
        setSliceSize(sl, sliceX(butt)--sliceWidth(butt), sliceY(butt))
        sl := nextSibling(sl)
    )
end

script, charmileWidth, val, begin
    variable(sl, body)

    sl := getNPCSprite(npc:charmile)
    body := lookupSlice(sli:charmileBody, sl)

    setSliceExtra(body, extra0, getSliceExtra(body, extra0) + val)
end

script, charmileHeight, val, begin
    variable(sl, body)

    sl := getNPCSprite(npc:charmile)
    body := lookupSlice(sli:charmileBody, sl)

    setSliceExtra(body, extra1, getSliceExtra(body, extra1) + val)
end

script, charmileFrontMove, relX, relY, begin
    variable(sl, x, y)

    sl := getNPCSlice(npc:charmile)

    x := sliceX(sl) + relX
    y := sliceY(sl) + relY

    putSlice(sl, x, y)
    charmileWidth(-1 * relX)
    charmileHeight(-1 * relY)
    updateNPCorHeroFromSlice(sl)
end

plotscript, charmileTalk, begin
    tbSource := 0
    controlsSuspended := true
    showTextbox(25)
    timerWaitForTextbox()
end

plotscript, charmileLeave, begin
    controlsSuspended := true 

    variable(sl, body, i)
    sl := getNPCSprite(npc:charmile)
    body := lookupSlice(sli:charmileBody, sl)

    setSliceExtra(body, extra2, 240)

    setTimer(timer:beat, 240, 1, @endCharmileScene)
end

script, endCharmileScene, tb, begin
    variable(i)

    for(i, 46, 49) do(
        writePassBlock(i, 81, 0)
    )
    putNPC(npc:charmile, 37*20, (12*20)--6)
    charmileWidth(-50)
    showTextbox(40)
    
    timerWaitForTextbox()
end

plotscript, charmileStretch, begin
    variable(sl, body, i)

    sl := getNPCSprite(npc:charmile)
    body := lookupSlice(sli:charmileBody, sl)

    setSliceExtra(body, extra2, -450)
    setTag(tag:charmileStretched, on)

    for(i, 39, 59) do(
        writePassBlock(i, 12, 0)
    )

    timerWaitForTextbox()

    showTextbox(42)

    timerWaitForTextbox()
end

# Chadbile
# ===============================================

plotscript, chadbile, begin
    setTag(tag:chadbileStart, on)
    gamePaused := true
    controlsSuspended := true

    toggleCutsceneBars(true)

    focusCamera(18, 30, 2)
    waitForCamera()

    setHeroPosition(me, 19, 33)
    putSliceSubpixel(player, heroPixelX(me)*1000, heroPixelY(me)*1000)

    showTextbox(44)
    waitForTextbox()

    wait(10)

    variable(x, y)
    for(x, 0, mapWidth()--1) do(
        for(y, 0, mapHeight()--1) do(
            if(readZone(1, x, y)) then(
                writePassBlock(x, y, northwall+southwall+eastwall+westwall)
                writeMapBlock(x, y, 133, 3)
            )
        )
    )

    $1="Chadbile"
    toggleBossBar(true, 1)
    clearString(1)
    currentBoss := enemy:chadbile

    toggleCutsceneBars(false)
    cameraFollowsHero(me)
    gamePaused := false
    controlsSuspended := false
    setEnemyActDelay(globalNPCReference(enemy:chadbile), 45)
    setEnemyState(globalNPCReference(enemy:chadbile), ai:idle)
    playSong(1)

    minionCount := 0
end

script, chadbileKilled, begin
    variable(c, i, vfx, sl)

    controlsSuspended := true
    stopSong()

    setTag(tag:chadbileDefeated, on)
    toggleCutsceneBars(true)

    setHeroStat(me, stat:HP, getHeroStat(me, stat:HP, maximumStat))

    for(c, npcCopyCount(enemy:fan, pool:global)--1, 0, -1) do(
        destroyNPC(globalNPCReference(enemy:fan, c))
    )
    c := lastChild(projectileLayer) 
    while(c) do(
        i := c
        c := previousSibling(c)
        freeSlice(i)
    )

    wait(30)

    variable(x, y)
    for(x, 0, mapWidth()--1) do(
        for(y, 0, mapHeight()--1) do(
            if(readZone(1, x, y)) then(
                writePassBlock(x, y, 0)
                writeMapBlock(x, y, 0, 3)
            )
        )
    )

    toggleBossBar(false)

    showTextbox(58)
    waitForTextbox()

    playSound(sfx:DeathEcho, false, true)

    sl := getNPCSlice(globalNPC(enemy:chadbile))
    for(i, 0, 7) do(
        vfx := loadAttackSprite(5)
        setParent(vfx, fxLayer)
        centerSlice(vfx)
        putSlice(vfx, sliceCX(sl), sliceCY(sl))
        createParticle(vfx, 50, 4000, i*(360/8), 20)
    )

    createPickup(0, @healthPickup, sliceCX(sl)+random(-20,20), sliceCY(sl)+random(-20,20))
    createPickup(0, @healthPickup, sliceCX(sl)+random(-20,20), sliceCY(sl)+random(-20,20))
    createPickup(0, @healthPickup, sliceCX(sl)+random(-20,20), sliceCY(sl)+random(-20,20))

    toggleCutsceneBars(false)
    playSong(0)

    setTimer(timer:cutscene, 30, 1, @delayedTb)
    setTimerArgs(timer:cutscene, 59)

    saveInSlot(1)
end

# Starbile
# =================================

plotscript, starbile, begin
    setTag(tag:starbileStart, on)
    gamePaused := true
    controlsSuspended := true

    toggleCutsceneBars(true)

    focusCamera(164, 14, 2)
    waitForCamera()

    stopTimer(timer:lightning)
    lightningFlash()

    setHeroPosition(me, 164, 18)
    putSliceSubpixel(player, heroPixelX(me)*1000, heroPixelY(me)*1000)

    wait(60)

    showTextbox(62)
    waitForTextbox()

    wait(10)

    variable(ref, vfx)
    ref := globalNPC(11)
    vfx := loadWalkaboutSprite(79)
    setParent(vfx, lookupSlice(sl:walkaboutLayer))
    realignSlice(vfx, edge:left, edge:top, edge:center, edge:bottom)
    putSlice(vfx, sliceCX(getNPCSlice(ref)), sliceY(getNPCSlice(ref))+sliceHeight(getNPCSlice(ref)))
    createAnimation(vfx, player:animSpeed*8, player:animSpeed, true)
    destroyNPC(ref)

    wait(player:animSpeed)
    while(getSpriteFrame(vfx) < 7) do(
        setSpriteFrame(vfx, getSpriteFrame(vfx)+1)
        wait(player:animSpeed)
    )
    setSpriteSetNumber(vfx, 80)
    while(getSpriteFrame(vfx) < 5) do(
        setSpriteFrame(vfx, getSpriteFrame(vfx)+1)
        wait(player:animSpeed)
    )

    wait(10)

    showTextbox(63)
    waitForTextbox()

    createEnemy(enemy:starbile, 164, 13)
    freeSlice(vfx)

    variable(x, y)
    for(x, 0, mapWidth()--1) do(
        for(y, 0, mapHeight()--1) do(
            if(readZone(1, x, y)) then(
                writePassBlock(x, y, northwall+southwall+eastwall+westwall)
                writeMapBlock(x, y, 133, 3)
            )
        )
    )

    $1="Starbile"
    toggleBossBar(true, 1)
    clearString(1)
    currentBoss := enemy:starbile

    toggleCutsceneBars(false)
    cameraFollowsHero(me)
    gamePaused := false
    controlsSuspended := false
    setEnemyActDelay(globalNPCReference(enemy:starbile), 60)
    setEnemyState(globalNPCReference(enemy:starbile), ai:idle)
    for(x, 0, npcCopyCount(enemy:speaker, pool:global)--1) do(
        if(x,mod,2 == 0) then(
            setEnemyActDelay(globalNPC(enemy:speaker, x), 120)
        ) else(
            setEnemyActDelay(globalNPC(enemy:speaker, x), 180)
        )
        setEnemyState(globalNPC(enemy:speaker, x), ai:idle)
    )
    playSong(1)

    minionCount := 0
end

script, starbileKilled, begin
    variable(c, i, vfx, sl)

    controlsSuspended := true
    stopSong()
    resetPalette()
    updatePalette()
    stopTimer(timer:lightning)

    setTag(tag:starbileDefeated, on)
    toggleCutsceneBars(true)

    setHeroStat(me, stat:HP, getHeroStat(me, stat:HP, maximumStat))

    for(c, npcCopyCount(enemy:speaker, pool:global)--1, 0, -1) do(
        destroyNPC(globalNPC(enemy:speaker, c))
    )
    c := lastChild(projectileLayer) 
    while(c) do(
        i := c
        c := previousSibling(c)
        freeSlice(i)
    )

    wait(10)

    variable(x, y)
    for(x, 0, mapWidth()--1) do(
        for(y, 0, mapHeight()--1) do(
            if(readZone(1, x, y)) then(
                writePassBlock(x, y, 0)
                writeMapBlock(x, y, 0, 3)
            )
        )
    )

    toggleBossBar(false)

    showTextbox(67)
    waitForTextbox()

    sl := getNPCSlice(globalNPC(enemy:starbile))
    playSound(sfx:DeathEcho, false, true)
    for(i, 0, 7) do(
        vfx := loadAttackSprite(5)
        setParent(vfx, fxLayer)
        centerSlice(vfx)
        putSlice(vfx, sliceCX(sl), sliceCY(sl))
        createParticle(vfx, 50, 4000, i*(360/8), 20)
    )

    setTimer(timer:cutscene, 60, 1, @endingScene)
end

script, endingScene, begin
    toggleCutsceneBars(false)
    fadeScreenOut()
    wait(40)
    loadSliceCollection(3)
    wait
    fadeScreenIn()
    wait 

    showTextbox(69)
    waitForTextbox()

    wait(60)

    showTextbox(71)
    waitForTextbox()

    wait(20)

    showTextbox(74)
    waitForTextbox()

    wait(30)

    showTextbox(75)
    waitForTextbox()

    wait(20)

    showTextbox(76)
    waitForTextbox()

    wait(60)
    resetGame()
end

script, lightningFlash, begin
    tweakPalette(50,40,50,0,0)
    updatePalette()
    playSound(sfx:lightning, false, true)
    setTimer(timer:lightning, random(4,12), 1, @endLightning)
end

script, endLightning, begin
    resetPalette()
    updatePalette()
    setTimer(timer:lightning, random(47, 360), 1, @lightningFlash)
end

plotscript, upTheMountain, begin
    controlsSuspended := true 
    gamePaused := true 

    fadeScreenOut()
    wait 

    cutsceneBg := loadSliceCollection(4)
    variable(dot) 
    dot := firstEllipseChild(cutsceneBg)

    putSlice(player, 164*20, 43*20)
    putSliceSubpixel(player, sliceX(player), sliceY(player))
    updateNPCorHeroFromSlice(player)

    wait 
    fadeScreenIn()
    wait(30)

    showTextbox(82)
    moveSliceTo(dot, 315, 110, 400)
    waitForTextbox()
    waitForSlice(dot)

    showTextbox(84)
    moveSliceTo(dot, 313, 98, 300)
    waitForTextbox()
    waitForSlice(dot)

    showTextbox(86)
    moveSliceTo(dot, 287, 82, 400)
    waitForTextbox()
    waitForSlice(dot)

    showTextbox(88)
    moveSliceTo(dot, 338, 69, 450)
    waitForTextbox()
    waitForSlice(dot)

    showTextbox(93)
    moveSliceTo(dot, 302, 52, 400)
    setSliceSize(dot, 4, 4)
    waitForTextbox()
    waitForSlice(dot)

    showTextbox(96)
    moveSliceTo(dot, 318, 46, 300)
    setSliceSize(dot, 3, 3)
    waitForTextbox()
    waitForSlice(dot)

    showTextbox(98)
    moveSliceTo(dot, 309, 39, 300)
    waitForTextbox()
    waitForSlice(dot)

    wait(60)

    showTextbox(99)
    waitForTextbox()

    fadeScreenOut()
    wait
    freeSlice(cutsceneBg)
    wait

    fadeScreenIn()
    wait(10)

    controlsSuspended := false 
    gamePaused := false

    endLightning()
end