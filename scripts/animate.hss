# animate.hss

# ========================================
# PLAYER ANIMATION
# ========================================

script, animatePlayer, begin
    # Called from mainGameLoop
    # Loops through player:frames sprite sets every playerAnimSpeed ticks
    # Ticks stored in player sprite extra0
    variable(timer, set, current, vfx)

    timer := getSliceExtra(getHeroSprite(me), extra0)

    if(timer <= 0) then(
        setSliceExtra(getHeroSprite(me), extra0, playerAnimSpeed)
        current := getSpriteSetNumber(getHeroSprite(me))
        if(current >= playerSpriteset + playerFrames -- 1
        || current < playerSpriteset) then(
            set := playerSpriteset
        ) else(
            set := getSpriteSetNumber(getHeroSprite(me)) + 1
        )
        setSpriteSetNumber(getHeroSprite(me), set)
        # Special FX
        if(playerSpriteset == player:rollSet) then(
            vfx := loadHeroSprite(3)
            setHorizAnchor(vfx, edge:center), setVertAnchor(vfx, edge:middle)
            setParent(vfx, lookupSlice(sl:mapLayer2))
            putSlice(vfx, sliceCX(player), sliceCY(player))
            createAnimation(vfx, 32, 4, false, dissolve:fade)
        )
    ) else(
        setSliceExtra(getHeroSprite(me), extra0, getSliceExtra(getHeroSprite(me), extra0)--1)
    )

    invincibilityFlash()
    repositionAttackSlice()
end

script, repositionAttackSlice, begin
    variable(attack, w, h, x, y)
    attack := lookupSlice(sli:attack, player)
    switch(heroDirection(me)) do(
        case(up) do(
            w := max(sliceWidth(attack), sliceHeight(attack))
            h := min(sliceWidth(attack), sliceHeight(attack))
            x := 0
            y := 0--(sliceHeight(player)/2)--(h/2)
        )
        case(down) do(
            w := max(sliceWidth(attack), sliceHeight(attack))
            h := min(sliceWidth(attack), sliceHeight(attack))
            x := 0
            y := (sliceHeight(player)/2)+(h/2)
        )
        case(left) do(
            w := min(sliceWidth(attack), sliceHeight(attack))
            h := max(sliceWidth(attack), sliceHeight(attack))
            x := 0--(sliceWidth(player)/2)--(w/2)
            y := 0
        )
        case(right) do(
            w := min(sliceWidth(attack), sliceHeight(attack))
            h := max(sliceWidth(attack), sliceHeight(attack))
            x := (sliceWidth(player)/2)+(w/2)
            y := 0
        )
    )

    setSliceSize(attack, w, h)
    putSlice(attack, x, y)
end

script, invincibilityFlash, begin
    # Called from animatePlayer
    # Checks if dodge stat is >0 and makes the player transparent and flashing if so
    variable(dodge, timer)

    dodge := getHeroStat(me, stat:dodge)
    timer := getSliceExtra(getHeroSprite(me), extra0) # used for animating as well

    if(dodge > 0) then(
        if(timer < player:animSpeed/2) then(
            setOpacity(getHeroSprite(me), 20)
        ) else(
            setOpacity(getHeroSprite(me), 60)
        )
        setHeroStat(me, stat:dodge, getHeroStat(me, stat:dodge) -- 1)
    ) else(
        setOpacity(getHeroSprite(me), 100)
    )
end

# Enemies
# =======================================

script, animateNPCs, begin
    variable(ref)

    ref := nextNPCReference()
    while(ref) do(
        # Exclamation point for talkable npcs
        if(getNPCPool(ref) == pool:local) then(
            if(readNPC(ref, npcStat:activation) == npcActivation:use) then(
                if(sliceCollide(lookupSlice(sli:attack, player), getNPCSlice(ref))) then(
                    setSliceVisible(lookupSlice(sli:exclamation, getNPCSlice(ref)), true)
                ) else(
                    setSliceVisible(lookupSlice(sli:exclamation, getNPCSlice(ref)), false)
                )
            )
            switch(getNPCID(ref)) do(
                case(npc:charmile, 23, 25) animateNPC(ref)
            )
        ) else(
            animateNPC(ref)
        )
        ref := nextNPCReference(ref)
    )
end

script, animateNPC, ref, begin
    variable(sl, timer, frames, originSet,set, current, dodge)

    sl := getNPCSprite(ref)
    timer := getSliceExtra(sl, extra0)
    dodge := getSliceExtra(sl, extra1)
    originSet := getSliceExtra(firstChild(sl), extra0)
    frames := getEnemyFrames(ref)

    if(timer <= 0) then(
        setSliceExtra(sl, extra0, player:animSpeed)
        current := getSpriteSetNumber(sl)
        if(current >= originSet + frames -- 1
        || current < originSet) then(
            set := originSet
        ) else(
            set := getSpriteSetNumber(sl) + 1
        )
        setSpriteSetNumber(sl, set)
    ) else(
        setSliceExtra(sl, extra0, getSliceExtra(sl, extra0)--1)
    )

    if(dodge > 0) then(
        setSliceExtra(sl, extra1, getSliceExtra(sl, extra1)--1)
    )

    damageFlash(sl)
end

script, damageFlash, sl, begin
    variable(dodge, timer)

    dodge := getSliceExtra(sl, extra1)
    timer := getSliceExtra(sl, extra0) # used for animating as well

    if(dodge > 0) then(
        if(timer < player:animSpeed/2) then(
            setOpacity(sl, 20)
        ) else(
            setOpacity(sl, 60)
        )
    ) else(
        setOpacity(sl, 100)
    )
end