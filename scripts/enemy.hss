# enemy.hss

defineConstant, begin
    0,enemy:dummy
    1,enemy:melee
    2,enemy:ranged
    30,enemy:actDelay
end

script, initEnemies, begin
    # loop through npcs and apply default values
    variable(ref)

    ref := nextNPCReference()
    while(ref) do(
        if(getNPCPool(ref) == pool:global) then(
            setSliceExtra(getNPCSprite(ref), extra2, getEnemyHP(ref))
        )
        
        ref := nextNPCReference(ref)
    )
end

script, enemyEachtick, begin
    # loop through npcs and apply behaviors based on id
    variable(ref)

    ref := nextNPCReference()
    while(ref) do(
        if(getNPCPool(ref) == pool:global) then(
            enemyBehavior(ref)
        )
        ref := nextNPCReference(ref)
    )
end

script, enemyBehavior, ref, begin
    # check enemy type and apply behavior based on current conditions
    variable(dist, npcSl, bearing, subX, subY)

    npcSl := getNPCSlice(ref)

    if(getEnemyActDelay(ref) > 0) then(
        setEnemyActDelay(ref, getEnemyActDelay(ref)--1)
        # Move if still moving
        if(getSliceV(npcSl) > 0) then(
            bearing := getSliceDir(npcSl)
            subX := get_x_subpixels(getSliceV(npcSl), bearing)
            subY := get_y_subpixels(getSliceV(npcSl), bearing)
            applyMove(npcSl, subX, subY)
            # Direction
            if(bearing > 315) then(setNPCDirection(ref, up))
            elseif(bearing > 225) then(setNPCDirection(ref, left))
            elseif(bearing > 135) then(setNPCDirection(ref, down))
            elseif(bearing > 45) then(setNPCDirection(ref, right))
            else(setNPCDirection(ref, up))
        )
        exitScript()
    )

    switch(getNPCID(ref)) do(
        case(enemy:dummy) do(
            # Do nothing
        )
        case(enemy:melee) do(
            # If player within certain radius, move towards them
            dist := getDistance(sliceCX(npcSl), sliceCY(npcSl), sliceCX(player), sliceCY(player))
            if(dist <= getEnemyAttackHeight(ref)) then(
                # Attack
                setEnemyActDelay(ref, enemy:actDelay)
                setSliceDir(npcSl, bearing)
                setSliceV(npcSl, 0)
            ) elseif(dist / 20 < 10 && getSliceExtra(getNPCSprite(ref), extra1) == 0) then(
                # Move towards player
                bearing := get_bearing(sliceCX(npcSl), sliceCY(npcSl), sliceCX(player), sliceCY(player))
                setEnemyActDelay(ref, enemy:actDelay)
                setSliceDir(npcSl, bearing)
                setSliceV(npcSl, getEnemySpeed(ref))
            )
        )
        case(enemy:ranged) do(
            # If player within certain radius, move towards them
            dist := getDistance(sliceCX(npcSl), sliceCY(npcSl), sliceCX(player), sliceCY(player))
            if(dist / 20 < 4  && getSliceExtra(getNPCSprite(ref), extra1) == 0) then(
                # Run away
                bearing := get_bearing(sliceCX(player), sliceCY(player), sliceCX(npcSl), sliceCY(npcSl))
                setEnemyActDelay(ref, enemy:actDelay)
                setSliceDir(npcSl, bearing)
                setSliceV(npcSl, getEnemySpeed(ref))
            ) elseif(dist / 20 < 10 && dist / 20 > 6 && getSliceExtra(getNPCSprite(ref), extra1) == 0) then(
                # Move towards player
                bearing := get_bearing(sliceCX(npcSl), sliceCY(npcSl), sliceCX(player), sliceCY(player))
                setEnemyActDelay(ref, enemy:actDelay)
                setSliceDir(npcSl, bearing)
                setSliceV(npcSl, getEnemySpeed(ref))
            )
        )
    )
end

script, getEnemyActDelay, ref, begin
    exitReturning(npcExtra(ref, extra0))
end

script, setEnemyActDelay, ref, v, begin
    setNPCExtra(ref, extra0, v) 
end

# Getter functions
# ====================================

script, getEnemyHP, ref, begin
    variable(id, default)

    default := 1

    if(getNPCPool(ref) == pool:local) then(exitReturning(default))

    id := getNPCID(ref)

    switch(id) do(
        case(enemy:dummy) exitReturning(10)
        case(else) exitReturning(default)
    )
end

script, getEnemyWidth, ref, begin
    variable(id, default)

    default := 12

    if(getNPCPool(ref) == pool:local) then(exitReturning(default))

    id := getNPCID(ref)

    switch(id) do(
        case(enemy:dummy) exitReturning(10)
        case(else) exitReturning(default)
    )
end

script, getEnemyHeight, ref, begin
    variable(id, default)

    default := 8
    
    if(getNPCPool(ref) == pool:local) then(exitReturning(default))

    id := getNPCID(ref)

    switch(id) do(
        case(enemy:dummy) exitReturning(10)
        case(else) exitReturning(default)
    )
end

script, getEnemyAttackWidth, ref, begin
    variable(id, default)

    default := 12

    if(getNPCPool(ref) == pool:local) then(exitReturning(default))

    id := getNPCID(ref)

    switch(id) do(
        case(enemy:dummy) exitReturning(10)
        case(else) exitReturning(default)
    )
end

script, getEnemyAttackHeight, ref, begin
    variable(id, default)

    default := 8
    
    if(getNPCPool(ref) == pool:local) then(exitReturning(default))

    id := getNPCID(ref)

    switch(id) do(
        case(enemy:dummy) exitReturning(10)
        case(else) exitReturning(default)
    )
end

script, getEnemyFrames, ref, begin
    exitReturning(4)
end

script, getEnemySpeed, ref, begin
    variable(id, default)

    default := 1500

    if(getNPCPool(ref) == pool:local) then(exitReturning(default))

    id := getNPCID(ref)

    switch(id) do(
        case(enemy:dummy) exitReturning(10)
        case(else) exitReturning(default)
    )
end